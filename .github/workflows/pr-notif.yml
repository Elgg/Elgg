name: PR Quality Reporter
on:
  pull_request:
    types: [closed]

jobs:
  report:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      checks: read
      pull-requests: write
    steps:
      - name: Get check results
        id: get-checks
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const { data: checks } = await github.rest.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.payload.pull_request.head.sha
              });

              // Handle case where no checks exist
              if (!checks.check_runs || checks.check_runs.length === 0) {
                core.info('No checks found to report');
                return;
              }
              
              const passed = checks.check_runs.filter(c => c.conclusion === 'success');
              const failed = checks.check_runs.filter(c => c.conclusion === 'failure');
              
              let message = `## PR Quality Report\n\n`;
              message += `### Individual Checks:\n`;
              message += checks.check_runs.map(c => `- ${c.name} ${c.conclusion === 'success' ? '✅ Passed' : '❌ Failed'}`).join('\n');
              message += `\n\n✅ Passed: ${passed.length}/${checks.check_runs.length} checks\n`;
              message += `${failed.length ? '❌ Some checks failed' : '🎉 All checks passed!'}`;
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            } catch (error) {
              core.info(`Reporting error: ${error.message}`);
              // Don't fail the workflow for reporting issues
            }

      - name: Ensure success
        run: echo "Report completed"