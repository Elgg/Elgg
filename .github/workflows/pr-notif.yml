name: PR Quality Reporter
on:
  pull_request:
    types: [closed]

jobs:
  report:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      checks: read
      pull-requests: write
    
    steps:
      - name: Get all check results
        id: get-checks
        uses: actions/github-script@v6
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha
            });
            
            const checkResults = checks.check_runs.map(check => ({
              name: check.name,
              status: check.conclusion === 'success' ? '✅ Passed' : '❌ Failed',
              url: check.html_url
            }));
            
            core.setOutput('results', JSON.stringify(checkResults));
            core.setOutput('passed_count', checkResults.filter(c => c.status === '✅ Passed').length);

      - name: Post detailed report
        uses: actions/github-script@v6
        with:
          script: |
            const results = JSON.parse('${{ steps.get-checks.outputs.results }}');
            const passedCount = '${{ steps.get-checks.outputs.passed_count }}';
            const totalChecks = results.length;
            
            let message = `## PR Quality Report\n\n`;
            
            // Detailed check list
            message += `### Individual Checks:\n`;
            message += results.map(c => `- ${c.name} ${c.status}`).join('\n');
            
            // Summary
            message += `\n\n✅ Passed: ${passedCount}/${totalChecks} checks\n`;
            message += `🎉 ${passedCount == totalChecks ? 'All checks passed!' : 'Some checks failed'}`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });