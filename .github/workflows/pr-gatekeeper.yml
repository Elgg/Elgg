name: PR Gatekeeper
on:
  pull_request_target:
    branches: [recette]
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  issues: write

jobs:
  validate-and-label:
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR source branch
        id: validate-branch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const validSources = ['dev', 'hotfix/'];
            const sourceBranch = context.payload.pull_request.head.ref;
            
            if (!validSources.some(prefix => sourceBranch.startsWith(prefix))) {
              core.setFailed(`❌ Invalid source branch. Only PRs from dev or hotfix/ branches allowed.`);
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'This PR was created from an invalid branch. Only `dev` or `hotfix/*` branches can target `recette`.'
              });
              return false;
            }
            return true;

      - name: Add label and update description
        if: steps.validate-branch.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Add label
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['recette-merge']
            });

            // Update PR body
            const currentBody = context.payload.pull_request.body || '';
            await github.rest.pulls.update({
              pull_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${currentBody}\n\n✅ Approved for recette merge - ${new Date().toISOString()}`
            });
