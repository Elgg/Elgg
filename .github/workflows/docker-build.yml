name: Build, Deploy and Scan to Recette

on:
  workflow_dispatch:
  push:
    branches: [dev]

env:
  RECETTE_IP: "34.22.137.184"
  # Add a unique cache key based on commit SHA
  CACHE_KEY: ${{ github.sha }}

jobs:
  docker-build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-output.outputs.image-tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/elgg-app:v6
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/elgg-app:v6
          cache-to: type=inline

      - name: Set image tag output
        id: set-output
        run: |
          echo "image-tag=${{ secrets.DOCKERHUB_USERNAME }}/elgg-app:v6" >> $GITHUB_OUTPUT

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    environment:
      name: recette
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set up gcloud CLI and kubectl
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          install_kubectl: true

      - name: Install GKE Auth Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin -q
          gcloud config set container/use_application_default_credentials true

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --region ${{ secrets.GKE_REGION }} \
            --project ${{ secrets.GKE_PROJECT }}

      - name: Check if deployment is needed
        id: check-deploy
        run: |
          # Check if the current image matches what's deployed
          CURRENT_IMAGE=$(kubectl get deployment elgg-app -n recette -o jsonpath='{.spec.template.spec.containers[0].image}')
          DESIRED_IMAGE="${{ needs.docker-build.outputs.image-tag }}"
          
          if [ "$CURRENT_IMAGE" = "$DESIRED_IMAGE" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "Deployment not needed - image already matches"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "Deployment needed - image differs"
          fi

      - name: Deploy to GKE
        if: steps.check-deploy.outputs.skip != 'true'
        run: |
          kubectl apply -f k8s/mariadb.yml -n recette
          kubectl apply -f k8s/pvc.yml -n recette
          kubectl apply -f k8s/elgg-app.yml -n recette
          kubectl apply -f k8s/phpMyAdmin.yml -n recette
          kubectl apply -f k8s/elgg-env.yml -n recette

          kubectl rollout status deployment/elgg-app -n recette
          kubectl rollout status deployment/elgg-phpmyadmin -n recette
          kubectl get all -n recette

  security-scan:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      # - name: Run Optimized ZAP Scan
      #   uses: zaproxy/action-full-scan@v0.12.0
      #   with:
      #     target: 'http://${{ env.RECETTE_IP }}'
      #     rules_file_name: '.zap/recette-rules.tsv'
      #     cmd_options: '-a -T 15 -m 3 -I'  
      #     ajax_spider: false               
      #     traditional_spider: true          
      #     max_alerts: 20                    
      #     report_html: true

      - name: Run Quick Security Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://${{ env.RECETTE_IP }}'
          cmd_options: '-t 5 -r report.html -w report.md'  # 5 min timeout, HTML+MD reports
          rules_file_name: '.zap/critical-rules.tsv'

      - name: Upload Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-security-report
          path: |
            report.html
            report.md

  quality-gate:
    needs: security-scan
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      issues: read
    steps:
      - name: Get PR Information
        id: pr-info
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            query($owner:String!, $repo:String!, $prNumber:Int!) {
              repository(owner:$owner, name:$repo) {
                pullRequest(number:$prNumber) {
                  headRefOid
                  title
                }
              }
            }
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          prNumber: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Deployment Notification
        uses: actions/github-script@v6
        with:
          script: |
            const commitHash = '${{ steps.pr-info.outputs.data.repository.pullRequest.headRefOid }}'.substring(0, 7);
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ UAT Deployment Ready for Review\n\n' +
                    '**Application Details:**\n' +
                    '```yaml\n' +
                    `image: ${{ needs.docker-build.outputs.image-tag }}\n` +
                    `environment: http://${{ env.RECETTE_IP }}\n` +
                    `commit: ${commitHash}\n` +
                    '```\n\n' +
                    '**Security Scan:** [View Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n' +
                    'To approve this deployment, comment with:\n' +
                    '`/approve-recette`'
            })
