name: Build & Deploy To Rancher

on:
  workflow_dispatch:
  pull_request:
    branches:
      - recette
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  actions: write
  pull-requests: write
  issues: write
  id-token: write
  security-events: write
  packages: write

env:
  CACHE_KEY: ${{ github.sha }}
  IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/elgg-app:v6
  KUBECONFIG_PATH: ${{ github.workspace }}/kubeconfig.yaml

jobs:

  # docker-build:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #     security-events: write

  #   outputs:
  #     image-tag: ${{ steps.set-tag.outputs.image-tag }}

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to DockerHub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push Docker image
  #       id: build
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ env.IMAGE_TAG }}
  #         cache-from: type=registry,ref=${{ env.IMAGE_TAG }}
  #         cache-to: type=inline

  #     - name: Set image tag output
  #       id: set-tag
  #       run: echo "image-tag=${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

  #     - name: Scan Docker image with Trivy
  #       uses: aquasecurity/trivy-action@0.20.0
  #       with:
  #         image-ref: ${{ env.IMAGE_TAG }}
  #         format: 'sarif'
  #         output: 'trivy-results.sarif'

  #     - name: Upload Trivy SARIF Report
  #       uses: github/codeql-action/upload-sarif@v3
  #       with:
  #         sarif_file: 'trivy-results.sarif'

  #     - name: Upload SARIF file as artifact (optional)
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: trivy-sarif-report
  #         path: trivy-results.sarif

  deploy-to-rancher:
    # needs: [docker-build]
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3

      - name: Decode Rancher kubeconfig
        run: |
          echo "${{ secrets.RANCHER_KUBECONFIG_B64 }}" | base64 -d > ${{ env.KUBECONFIG_PATH }}
        env:
          KUBECONFIG: ${{ env.KUBECONFIG_PATH }}

      # - name: Verify kubectl connectivity
      #   run: |
      #     kubectl config get-contexts
      #     kubectl cluster-info
      #   env:
      #     KUBECONFIG: ${{ env.KUBECONFIG_PATH }}

      # - name: Deploy PVC to Rancher
      #   run: kubectl apply -f k8s/pvc.yml -n ${{ secrets.RANCHER_NAMESPACE }}
      #   env:
      #     KUBECONFIG: ${{ env.KUBECONFIG_PATH }}

      - name: Deploy Secret 
        run: kubectl apply -f k8s/elgg-env.yml -n ${{ secrets.RANCHER_NAMESPACE }}
        env:
          KUBECONFIG: ${{ env.KUBECONFIG_PATH }}

      - name: Deploy MariaDB 
        run: kubectl apply -f k8s/mariadb.yml -n ${{ secrets.RANCHER_NAMESPACE }}
        env:
          KUBECONFIG: ${{ env.KUBECONFIG_PATH }}

      # - name: Deploy Elgg Deployment
      #   run: kubectl apply -f k8s/elgg-app.yml -n ${{ secrets.RANCHER_NAMESPACE }}
      #   env:
      #     KUBECONFIG: ${{ env.KUBECONFIG_PATH }}

      # - name: Verify Deployment rollout
      #   run: kubectl rollout status deployment/elgg-app -n ${{ secrets.RANCHER_NAMESPACE }}
      #   env:
      #     KUBECONFIG: ${{ env.KUBECONFIG_PATH }}
