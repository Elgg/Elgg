#<?php exit; ?>

ELGG_DEFAULT_TZ="{{timezone}}"

#
# Standard configuration
#
# You will use the same database connection for reads and writes.
# This is the easiest configuration, and will suit 99.99% of setups. However, if you're
# running a really popular site, you'll probably want to spread out your database connections
# and implement database replication.  That's beyond the scope of this configuration file
# to explain, but if you know you need it, skip past this section.

#
# The full file path for Elgg data storage. E.g. "/path/to/elgg-data/"
#
ELGG_DATAROOT="{{dataroot}}"

#
# The installation root URL of the site. E.g. "https://example.org/elgg/"
#
# If not provided, this is sniffed from the Symfony Request object
#
ELGG_WWWROOT="{{wwwroot}}"

#
# The database username
#
ELGG_DBUSER="{{dbuser}}"

#
# The database password
#
ELGG_DBPASS="{{dbpassword}}"

#
# The database name
#
ELGG_DBNAME="{{dbname}}"

#
# The database host.
#
# For most installations, this is 'localhost'
#
ELGG_DBHOST="{{dbhost}}"

#
# The database prefix
#
# This prefix will be appended to all Elgg tables.  If you're sharing
# a database with other applications, use a database prefix to namespace tables
# in order to avoid table name collisions.
#
ELGG_DBPREFIX="{{dbprefix}}"

#
# The database encoding.
#
# If installing a fresh instance of Elgg 3.x or later, this MUST be set to "utf8mb4".
# If you've upgraded an earlier Elgg version, do not set this until you have
# manually converted your Elgg tables to utf8mb4.
#
ELGG_DBENCODING="utf8mb4"

#
# Multiple database connections
#
# To specify reads be done on slave DBs, create vars like:
#
# ELGG_READ1_DBUSER
# ELGG_READ1_DBPASS
# ELGG_READ1_DBNAME
# ELGG_READ1_DBHOST
#
# ELGG_READ2_DBUSER
# ELGG_READ2_DBPASS
# ELGG_READ2_DBNAME
# ELGG_READ2_DBHOST

#
# Memcache setup (optional)
# This is where you may optionally set up memcache.
#
# Requirements:
# 	1) One or more memcache servers (http://www.danga.com/memcached/)
#  2) PHP memcache wrapper (http://php.net/manual/en/memcache.setup.php)
#
# You can set a namespace prefix if you run multiple Elgg instances
# on the same Memcache server.
#
# Note: Multiple server support is only available on server 1.2.1
# or higher with PECL library > 2.0.0
#
#ELGG_MEMCACHE="1"
#
#ELGG_MEMCACHE1_HOST="localhost"
#ELGG_MEMCACHE1_PORT="11211"

#
# namespace prefix
#
#ELGG_MEMCACHE_NAMESPACE_PREFIX=""

#
# Better caching performance
#
# Configuring simplecache in the settings.php file improves caching performance.
# It allows Elgg to skip connecting to the database when serving cached JavaScript
# and CSS files. If you uncomment and configure these settings, you will not be able
# to change them from the Elgg advanced settings page.
#
#ELGG_SIMPLECACHE_ENABLED="1"

#
# Enable the boot cache
#
# Elgg can store most non-user-specific boot up data in a cache. If you want to
# enable this, uncomment the next line to set it to 10. Although Elgg has a built-
# in invalidation strategy for this cache, you should consider a small TTL to
# minimize the damage if the cache should grow stale.
#
#ELGG_BOOT_CACHE_TTL="10"

#
# Set cache directory
#
# By default, Elgg uses the data directory to store cache files, but this may
# be undesirable for sites with the data directory on a distributed file system
# (e.g. multiple servers with load balancing). You can specify a separate location
# for the cache files here.
#
ELGG_CACHEROOT="${ELGG_DATAROOT}"

#
# Enable SendFile file serving
#
# After enabling X-Sendfile/X-Accel on your server, you can enable its support in Elgg. Set the
# X-Sendfile-Type value to "X-Sendfile" (Apache) or "X-Accel-Redirect" (Nginx).
#
#ELGG_X_SENDFILE_TYPE=""

#
# Configure X-Accel on nginx (see SendFile above)
#
# For Nginx, you'll likely also need to set this to a mapping like: "/path/to/dataroot/=/download/".
#
#ELGG_X_ACCEL_MAPPING=""

#
# Configure site secret
#
# If provided here, the /serve-file/ handler can avoid touching the DB. Do not use an arbitrary
# value. Copy this from your DB config table under the name "__site_secret__".
#
#ELGG_SITE_SECRET=""

#
# Cookie configuration
#
# Elgg uses 2 cookies: a PHP session cookie and an extended login cookie
# (also called the remember me cookie). See the PHP manual for documentation on
# each of these parameters. Possible options:
#
#  - Set the session name to share the session across applications.
#  - Set the path because Elgg is not installed in the root of the web directory.
#  - Set the secure option to "1" if you only serve the site over HTTPS.
#  - Set the expire option on the remember me cookie to change its lifetime
#
# To use, uncomment the appropriate sections below and update for your site.
#
# get the default parameters from php.ini, then merge these...
#ELGG_COOKIE_DEFAULTS_SOURCE="session_get_cookie_params"
#ELGG_COOKIE_NAME="Elgg"
#ELGG_COOKIE_PATH="/"
#ELGG_COOKIE_DOMAIN=""
#ELGG_COOKIE_SECURE=""
#ELGG_COOKIE_HTTPONLY=""
#
# extended session cookie
#
#ELGG_REMEMBER_COOKIE_DEFAULTS_SOURCE="session_get_cookie_params"
#ELGG_REMEMBER_COOKIE_NAME="elggperm"
#ELGG_REMEMBER_COOKIE_EXPIRE="+30 days"
#ELGG_REMEMBER_COOKIE_PATH="/"
#ELGG_REMEMBER_COOKIE_DOMAIN=""
#ELGG_REMEMBER_COOKIE_SECURE=""
#ELGG_REMEMBER_COOKIE_HTTPONLY=""
#


#
# Use non-standard headers for broken MTAs.
#
# The default header EOL for headers is \r\n.  This causes problems
# on some broken MTAs.  Setting this to "1" will cause Elgg to use
# \n, which will fix some problems sending email on broken MTAs.
#
ELGG_BROKEN_MTA=""

#
# Disable the database query cache
#
# Elgg stores each query and its results in a query cache.
# On large sites or long-running scripts, this cache can grow to be
# large.  To disable query caching, set this to "1".
#
ELGG_DB_DISABLE_QUERY_CACHE=""

#
# Automatically disable plugins that are unable to boot
#
# Elgg will disable unbootable plugins. If you set this to "" plugins
# will no longer be disabled if they are not bootable. This could cause requests
# to your site to fail as required views, classes or cached data could be missing.
#
# Setting this to "" could be useful during deployment of new code.
#
ELGG_AUTO_DISABLE_PLUGINS="1"

#
# Minimum password length
#
# This value is used when validating a user's password during registration.
#
ELGG_MIN_PASSWORD_LENGTH="6"

#
# This is an optional script used to override Elgg's default handling of
# uncaught exceptions.
#
# This should be an absolute file path to a php script that will be called
# any time an uncaught exception is thrown.
#
# The script will have access to the following variables as part of the scope
# global $CONFIG
# $exception - the unhandled exception
#
# @warning - the database may not be available
#
# @global string $CONFIG->exception_include
#
ELGG_EXCEPTION_INCLUDE=""

#
# To enable profiling, uncomment the following lines, and replace __some_secret__ with a
# secret key. When enabled, profiling data will show in the JS console.
#
#ELGG_PROFILER_SECRET_GET_VAR="__some_secret__"
#
# send profiling data to the JS console?
#ELGG_PROFILER_ENABLE="1"
#
# profile all queries? A page with a ton of queries could eat up memory.
#ELGG_PROFILER_SQL=""
#
# in the list, don't include times that don't contribute at least this much to the
# total time captured. .1% by default
#ELGG_PROFILER_MIN_PERCENTAGE=".1"

#
# Maximum php execution time for actions (in seconds)
#
# This setting can be used to set a custom default php execution time only for all registered Elgg actions.
# Note that if some actions set their own execution time limit, this setting will no affect those actions.
#
ELGG_ACTION_TIME_LIMIT="120"

#
# To set arbitrary config keys, prefix with "ELGG_" and use upper snake case.
#
# E.g. This would be available via elgg_get_config('foo_bar');
#ELGG_FOO_BAR="bing"
#
