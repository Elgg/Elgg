# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: elgg-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: elgg-app
#   template:
#     metadata:
#       labels:
#         app: elgg-app
#     spec:
#       initContainers:
#       - name: fix-permissions
#         image: bitaouioussama/elgg-app:v6
#         command: ["/bin/sh", "-c", "chown -R www-data:www-data /var/elgg_data && chmod -R 775 /var/elgg_data && chown -R www-data:www-data /var/www/html/elgg/elgg-config && chmod -R 775 /var/www/html/elgg/elgg-config "]
#       - name: init-elgg-config
#         image: bitaouioussama/elgg-app:v6
#         command: ["sh", "-c", "cp -r /var/www/html/elgg/elgg-config/* /mnt/elgg-config || true"]
#         volumeMounts:
#         - mountPath: /var/elgg_data
#           name: elgg-data
#         - mountPath: /var/www/html/elgg/elgg-config
#           name: elgg-config-volume

#       containers:
#       - name: elgg-app
#         image: bitaouioussama/elgg-app:v6
#         envFrom:
#           - secretRef:
#               name: elgg-env
#         ports:
#         - containerPort: 80
#         resources:
#           requests:
#             cpu: "50m"
#             memory: "128Mi"
#           limits:
#             cpu: "300m"
#             memory: "384Mi"
#         volumeMounts:
#         - mountPath: /var/elgg_data
#           name: elgg-data
#         - mountPath: /var/www/html/elgg/elgg-config
#           name: elgg-config-volume

#       volumes:
#       - name: elgg-data
#         persistentVolumeClaim:
#           claimName: elgg-pvc
#       - name: elgg-config-volume
#         persistentVolumeClaim:
#           claimName: elgg-config-pvc

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: elgg-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: elgg-app
#   template:
#     metadata:
#       labels:
#         app: elgg-app
#     spec:
#       initContainers:
#       - name: fix-permissions
#         image: bitaouioussama/elgg-app:v6
#         command: ["/bin/sh", "-c", "chown -R www-data:www-data /var/elgg_data && chmod -R 775 /var/elgg_data"]

#       containers:
#       - name: elgg-app
#         image: bitaouioussama/elgg-app:v6
#         envFrom:
#         - secretRef:
#             name: elgg-env
#         ports:
#         - containerPort: 80
#         resources:
#           requests:
#             cpu: "100m"
#             memory: "256Mi"
#           limits:
#             cpu: "500m"
#             memory: "384Mi"
#         volumeMounts:
#         - mountPath: /var/elgg_data
#           name: elgg-data

#       volumes:
#       - name: elgg-data
#         persistentVolumeClaim:
#           claimName: elgg-pvc

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: elgg-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: elgg-app
#   template:
#     metadata:
#       labels:
#         app: elgg-app
#     spec:
#       securityContext:
#         fsGroup: 33  # This ensures volume is writable by www-data
#       initContainers:
#       - name: fix-permissions
#         image: bitaouioussama/elgg-app:v6
#         command: ["/bin/sh", "-c", "chown -R www-data:www-data /var/elgg_data && chmod -R 775 /var/elgg_data"]
#         volumeMounts:
#         - mountPath: /var/elgg_data
#           name: elgg-data

#       containers:
#       - name: elgg-app
#         image: bitaouioussama/elgg-app:v6
#         securityContext:
#           runAsUser: 33  # Run as www-data user
#         envFrom:
#         - secretRef:
#             name: elgg-env
#         ports:
#         - containerPort: 80
#         resources:
#           requests:
#             cpu: "100m"
#             memory: "256Mi"
#           limits:
#             cpu: "500m"
#             memory: "384Mi"
#         volumeMounts:
#         - mountPath: /var/elgg_data
#           name: elgg-data

#       volumes:
#       - name: elgg-data
#         persistentVolumeClaim:
#           claimName: elgg-pvc

apiVersion: apps/v1
kind: Deployment
metadata:
  name: elgg-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elgg-app
  template:
    metadata:
      labels:
        app: elgg-app
    spec:
    securityContext:
        fsGroup: 33
      initContainers:
      - name: fix-permissions
        image: bitaouioussama/elgg-app:v6
        command: ["/bin/sh", "-c", "chown -R www-data:www-data /var/elgg_data && chmod -R 775 /var/elgg_data"]
        #fichiers de configuration
        command: ["/bin/sh", "-c", "chown -R 33:33 /var/www/html/elgg/elgg-config && chmod -R 775 /var/wwww/html/elgg/elgg-config"]
        volumeMounts:
        - mountPath: /var/elgg_data
          name: elgg-data

        - mountPath: /var/www/html/elgg/elgg-config
          name: elgg-config-volume

      containers:
      - name: elgg-app
        image: bitaouioussama/elgg-app:v6
        envFrom:
          - secretRef:
              name: elgg-env
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "300m"
            memory: "384Mi"
        volumeMounts:
        - mountPath: /var/elgg_data
          name: elgg-data

        - mountPath: /var/www/html/elgg/elgg-config
          name: elgg-config-volume

      volumes:
      - name: elgg-data
        persistentVolumeClaim:
          claimName: elgg-pvc
      - name: elgg-config-volume
        persistentVolumeClaim:
          claimName: elgg-config-pvc
---

apiVersion: v1
kind: Service
metadata:
  name: elgg-app
spec:
  type: LoadBalancer
  selector:
    app: elgg-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  loadBalancerIP: 34.175.206.89
